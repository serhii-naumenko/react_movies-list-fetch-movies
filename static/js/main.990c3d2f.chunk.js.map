{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","API_URL","getMovie","title","a","fetch","response","ok","status","Error","json","gottenMovie","FindMovie","onAddMovie","doubleFilm","useState","query","setQuery","setMovie","isError","setIsError","useEffect","hendlerSearch","useCallback","Response","onAdd","htmlFor","type","id","placeholder","classNames","value","onChange","event","target","onClick","App","setMovies","isDoubleFilm","setDoubleFilm","addMovie","newMovie","some","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.990c3d2f.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const API_URL = 'http://www.omdbapi.com/?i=tt3896198&apikey=59f6cb1b';\n\nexport async function getMovie(title: string): Promise<Movie> {\n  const response = await fetch(`${API_URL}&t=${title}`);\n\n  if (!response.ok) {\n    switch (response.status) {\n      case 404:\n        throw new Error('Can\\'t find a movie with such a title');\n\n      default:\n        throw new Error('Server respond with error');\n    }\n  }\n\n  const gottenMovie = await response.json();\n\n  return gottenMovie;\n}\n","import React, { useCallback, useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api/api';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  onAddMovie: (newMovie: Movie) => void,\n  doubleFilm: boolean,\n};\n\nexport const FindMovie: React.FC<Props> = ({\n  onAddMovie,\n  doubleFilm,\n}) => {\n  const [query, setQuery] = useState<string>('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isError, setIsError] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (doubleFilm) {\n      setIsError('You have already enjoyed this film');\n    }\n  }, [doubleFilm]);\n\n  const hendlerSearch = useCallback(async () => {\n    if (query === '') {\n      setIsError('Please choose a film');\n    } else {\n      const gottenMovie = await getMovie(query);\n\n      if (gottenMovie.Response === 'True') {\n        setMovie(gottenMovie);\n        setIsError('');\n      } else {\n        setIsError('Can\\'t find a movie with such a title');\n      }\n    }\n  }, [query, movie]);\n\n  const onAdd = useCallback(() => {\n    if (movie !== null) {\n      onAddMovie(movie);\n      setQuery('');\n      setMovie(null);\n    }\n  }, [movie, isError]);\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames(\n                'input',\n                { 'is-danger': isError },\n              )}\n              value={query}\n              onChange={(event) => setQuery(event.target.value)}\n            />\n          </div>\n\n          <p className=\"help is-danger\">\n            {isError}\n          </p>\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={hendlerSearch}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={onAdd}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && (\n          <MovieCard\n            movie={movie}\n          />\n        )}\n      </div>\n    </>\n  );\n};\n","import React, { useCallback, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [isDoubleFilm, setDoubleFilm] = useState<boolean>(false);\n\n  const addMovie = useCallback((newMovie: Movie) => {\n    const result = movies.some(movie => movie.imdbID === newMovie.imdbID);\n\n    if (!result) {\n      setMovies(prevMovies => [...prevMovies, newMovie]);\n      setDoubleFilm(false);\n    } else {\n      setDoubleFilm(true);\n    }\n  }, [movies, isDoubleFilm]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          onAddMovie={addMovie}\n          doubleFilm={isDoubleFilm}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}